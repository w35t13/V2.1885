###############################################################################
#          Resonance testing
###############################################################################

[gcode_shell_command process_res]
command: /home/pi/klipper_config/scripts/process_resonances.sh
timeout: 180.
verbose: True

[gcode_macro TEST_ALL_RESONANCES]
description: Perform X, Y resonance tests, takes a while of course
gcode:
    TEST_RESONANCES AXIS=X
    TEST_RESONANCES AXIS=Y
    RUN_SHELL_COMMAND CMD=process_res

###############################################################################
#         Speed test 
###############################################################################

[gcode_macro SPEEDTEST]
description: Home, get position, throw around toolhead, home again. If XY steps are greater than XY microsteps different (a full step - usually just endstop variance), then we likely skipped
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}
    
    SAVE_GCODE_STATE NAME=SPEEDTEST
    G28 X Y
    GET_POSITION
    G90                              ; absolute positioning
    {% for iteration in range(i|int) %}
        G1 X10 Y10 F99999
        G1 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} F99999
        G1 X10 Y10 F99999
        G1 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} F99999

        G1 X20 Y{printer.toolhead.axis_maximum.y-10} F99999

        G1 X{printer.toolhead.axis_maximum.x-10} Y10 F99999
        G1 X10 Y{printer.toolhead.axis_maximum.y-10} F99999
        G1 X{printer.toolhead.axis_maximum.x-10} Y10 F99999
        G1 X10 Y{printer.toolhead.axis_maximum.y-10} F99999

        G1 X10 Y10 F99999
        G1 X{printer.toolhead.axis_maximum.x-10} Y10 F99999
        G1 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} F99999
        G1 X10 Y{printer.toolhead.axis_maximum.y-10} F99999
        G1 X10 Y10 F99999
    {% endfor %}
    G28 X Y
    GET_POSITION
    RESTORE_GCODE_STATE NAME=SPEEDTEST

#####################################################################
#	Macros
#####################################################################

[gcode_macro PARTY_ON]
gcode:
    SET_LED_EFFECT EFFECT=party

[gcode_macro PARTY_OFF]
gcode:
    SET_LED_EFFECT EFFECT=party STOP=1

[gcode_macro STOP_EFFECT]
gcode:
    STOP_LED_EFFECTS

[gcode_macro critical]
gcode:
    SET_LED_EFFECT EFFECT=critical_error

[gcode_macro case_idle]
gcode:
    SET_LED_EFFECT EFFECT=case_idle

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro DARKNESS]
gcode:
    LOGO_LEDS_OFF
    NOZZLE_LEDS_OFF
    SET_PIN PIN=caselight VALUE=0
    WLED_OFF STRIP=case
    STOP_EFFECT

[gcode_macro purple]
gcode:
    _set_sb_leds_by_name leds="logo" color="purple" transmit=0
    set_nozzle_leds_on

[gcode_macro NOZZLE_LEDS_ON]
gcode:
    SET_NOZZLE_LEDS_ON

[gcode_macro LOGO_LEDS_OFF]
gcode:
    SET_LOGO_LEDS_OFF

[gcode_macro NOZZLE_LEDS_OFF]
gcode:
    SET_NOZZLE_LEDS_OFF

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28
    STATUS_READY


[gcode_macro Caselight]
gcode:
  SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}

[gcode_macro QGL]
gcode:
    STATUS_HOMING
    #G28
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}	
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_READY
    G1 X175 Y175 Z20 F30000

[gcode_macro BED_MESH]
gcode:
    G32
    BED_MESH_CALIBRATE
    G1 X175 Y175 Z20 F30000

[gcode_macro BED_CENTER]
gcode:
    G1 X175 Y175 Z15 F50000

[gcode_macro FRONT_CENTER]
gcode:
    G1 X175 Y10 Z40 F50000

[gcode_macro WLED_ON_CASE]
gcode:
    WLED_ON STRIP=case

[gcode_macro WLED_OFF_CASE]
gcode:
    WLED_OFF STRIP=case

[gcode_macro WLED_ON]
description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|string %}
  {% set preset = params.PRESET|default(-1)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)}

[gcode_macro WLED_OFF]
description: Turn WLED strip off
gcode:
  {% set strip = params.STRIP|string %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=False)}

[gcode_macro SET_WLED]
description: SET_LED like functionality for WLED, applies to all active segments
gcode:
    {% set strip = params.STRIP|string %}
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set index = params.INDEX|default(-1)|int %}
    {% set transmit = params.TRANSMIT|default(1)|int %}

    {action_call_remote_method("set_wled",
                               strip=strip,
                               red=red, green=green, blue=blue, white=white,
                               index=index, transmit=transmit)}